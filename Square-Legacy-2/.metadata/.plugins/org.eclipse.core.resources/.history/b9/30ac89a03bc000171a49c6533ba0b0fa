package com.IB.SL.entity.projectile;

import java.io.InputStream;
import java.lang.reflect.Field;
import java.util.concurrent.ThreadLocalRandom;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

import com.IB.SL.Boot;
import com.IB.SL.graphics.Screen;
import com.IB.SL.graphics.Sprite;

public class XML_Projectile extends Projectile {
	
	public String XML_String = "";
	
	public XML_Projectile(String XML) {
		readXML(XML);
	}
	
	public XML_Projectile(double x, double y, String XML) {
		readXML(XML);
		this.x = x;
		this.y = y;
	}
	
	public void readXML(String path) {
		this.XML_String = path;
		try {
		InputStream fXmlFile = getClass().getResourceAsStream(path);
		DocumentBuilderFactory dbFac = DocumentBuilderFactory.newInstance();
		DocumentBuilder dBuilder = dbFac.newDocumentBuilder();
		Document doc = dBuilder.parse(fXmlFile);
		
		doc.getDocumentElement().normalize();
		
		System.out.println("ROOT: " + doc.getDocumentElement().getNodeName());
		
		initProjectile(doc);
		initSprite(doc);
		
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
	
	public void initProjectile(Document doc) {
		NodeList nList = doc.getElementsByTagName("mob");
		System.out.println("----------------------------");
		for (int temp = 0; temp < nList.getLength(); temp++) {
			Node nNode = nList.item(temp);
			System.out.println("\nCurrent Element :" + nNode.getNodeName());
			if (nNode.getNodeType() == Node.ELEMENT_NODE) {
				Element eElement = (Element) nNode;
				try {
					setProperties(eElement);
					} catch (Exception e) {
						e.printStackTrace();
				}
			}
		}
	}
	
	public void setProperties(Element eElement) {
		try {
		this.id = Integer.parseInt(eElement.getAttribute("id"));
		this.name = (eElement.getElementsByTagName("name").item(0).getTextContent());
		this.speed = Double.parseDouble(eElement.getElementsByTagName("speed").item(0).getTextContent());
		this.xOffset = Integer.parseInt(((Element)eElement.getElementsByTagName("sprite").item(0)).getAttribute("xOffset"));
		this.yOffset = Integer.parseInt(((Element)eElement.getElementsByTagName("sprite").item(0)).getAttribute("yOffset"));
		this.range = ThreadLocalRandom.current().nextInt((int)((Element)eElement.getElementsByTagName("range").item(0)).getAttribute("min"), ((Element)eElement.getElementsByTagName("range").item(0)).getAttribute("max") + 1);
		
		Field field = Sprite.class.getField(((Element)eElement.getElementsByTagName("sprite").item(0)).getAttribute("Arrow"));
		this.sprite = (Sprite) field.get(field.getType());
		
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public void update() {
	}
	
	public void render(Screen screen) {
		screen.renderProjectile((int)x + xOffset,(int)y + yOffset, this);
		if (Boot.get().devModeOn) screen.drawRect((int)x - 3, (int)y - 9, 5, 5, 0x0093FF, true);
	}
}
